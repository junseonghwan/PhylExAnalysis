// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ReadParentVector
String ReadParentVector(String file_path, size_t mutation_count);
RcppExport SEXP _PhylExR_ReadParentVector(SEXP file_pathSEXP, SEXP mutation_countSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type file_path(file_pathSEXP);
    Rcpp::traits::input_parameter< size_t >::type mutation_count(mutation_countSEXP);
    rcpp_result_gen = Rcpp::wrap(ReadParentVector(file_path, mutation_count));
    return rcpp_result_gen;
END_RCPP
}
// GetChains
NumericVector GetChains(NumericVector parent_vector);
RcppExport SEXP _PhylExR_GetChains(SEXP parent_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parent_vector(parent_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(GetChains(parent_vector));
    return rcpp_result_gen;
END_RCPP
}
// get_parent_name
std::string get_parent_name(std::string node);
RcppExport SEXP _PhylExR_get_parent_name(SEXP nodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type node(nodeSEXP);
    rcpp_result_gen = Rcpp::wrap(get_parent_name(node));
    return rcpp_result_gen;
END_RCPP
}
// GetConfigMatrix
NumericMatrix GetConfigMatrix(DataFrame datum2node, std::vector<std::string> ordered_nodes);
RcppExport SEXP _PhylExR_GetConfigMatrix(SEXP datum2nodeSEXP, SEXP ordered_nodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type datum2node(datum2nodeSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type ordered_nodes(ordered_nodesSEXP);
    rcpp_result_gen = Rcpp::wrap(GetConfigMatrix(datum2node, ordered_nodes));
    return rcpp_result_gen;
END_RCPP
}
// LogAdd
double LogAdd(double x, double y);
RcppExport SEXP _PhylExR_LogAdd(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(LogAdd(x, y));
    return rcpp_result_gen;
END_RCPP
}
// LogSumExp
double LogSumExp(NumericVector x);
RcppExport SEXP _PhylExR_LogSumExp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(LogSumExp(x));
    return rcpp_result_gen;
END_RCPP
}
// IdentifyNodeMutationStatus
NumericMatrix IdentifyNodeMutationStatus(DataFrame datum2node, const std::vector<std::string>& ordered_nodes, const std::vector<std::string>& ordered_mutations);
RcppExport SEXP _PhylExR_IdentifyNodeMutationStatus(SEXP datum2nodeSEXP, SEXP ordered_nodesSEXP, SEXP ordered_mutationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type datum2node(datum2nodeSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type ordered_nodes(ordered_nodesSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type ordered_mutations(ordered_mutationsSEXP);
    rcpp_result_gen = Rcpp::wrap(IdentifyNodeMutationStatus(datum2node, ordered_nodes, ordered_mutations));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PhylExR_ReadParentVector", (DL_FUNC) &_PhylExR_ReadParentVector, 2},
    {"_PhylExR_GetChains", (DL_FUNC) &_PhylExR_GetChains, 1},
    {"_PhylExR_get_parent_name", (DL_FUNC) &_PhylExR_get_parent_name, 1},
    {"_PhylExR_GetConfigMatrix", (DL_FUNC) &_PhylExR_GetConfigMatrix, 2},
    {"_PhylExR_LogAdd", (DL_FUNC) &_PhylExR_LogAdd, 2},
    {"_PhylExR_LogSumExp", (DL_FUNC) &_PhylExR_LogSumExp, 1},
    {"_PhylExR_IdentifyNodeMutationStatus", (DL_FUNC) &_PhylExR_IdentifyNodeMutationStatus, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_PhylExR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
